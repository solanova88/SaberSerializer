<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.TestFramework</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.TestFramework.CustomExtensionMappingAttribute">
            <summary>
            Creates one-way or two-way mapping between file extensions and project file types in tests
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.CustomExtensionMappingAttribute.#ctor(System.Type,System.String[],JetBrains.ReSharper.TestFramework.MappingBehaviour)">
            <summary>
            Creates one-way or two-way mapping between file extensions and a project file type in tests.
            </summary>
            <param name="projectFileTypeType">A project file type to map or to be mapped onto</param>
            <param name="extensionsWithDot">File extensions to map or to be mapped onto</param>
            <param name="mappingBehaviour">Flags for mapping directions and overriding behaviour</param>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestAdditionalGoldSuffixAttribute">
            <summary>
            For backward compatibility 
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestAdditionalGoldSuffixesAttribute">
            <summary>
            For backward compatibility 
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestFilesMoveAttribute">
            <summary>
            An attribute that may be used to copy some files around 
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TreatRazorAsBlazorAttribute">
            <summary>
            Enables blazor generator for .cshtml files
            </summary>
            <param name="mapCshtmlToBlazor">If true, force maps files with .cshtml extension to <see cref="T:JetBrains.ProjectModel.RazorComponentProjectFileType"/></param>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TreatRazorAsBlazorAttribute.#ctor(System.Boolean)">
            <summary>
            Enables blazor generator for .cshtml files
            </summary>
            <param name="mapCshtmlToBlazor">If true, force maps files with .cshtml extension to <see cref="T:JetBrains.ProjectModel.RazorComponentProjectFileType"/></param>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TreatRazorAsBlazorAttribute.#ctor">
            <summary>
            By default, both enables Blazor generator and treats .cshtml files as .razor files
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithExistingSolutionLoadedByMsbuild.PrepareSolutionFlags.NONE">
            <summary>
            Solution is used from test folder, extra .editorconfig files should not matter, no write operations on the solution expected
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithExistingSolutionLoadedByMsbuild.PrepareSolutionFlags.COPY_TO_TEMP_FOLDER_ONCE">
            <summary>
            Solution is copied to temp folder and used for all the tests. No write operations on the solution expected
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithExistingSolutionLoadedByMsbuild.PrepareSolutionFlags.COPY_TO_TEMP_FOLDER_EACH_TEST">
            <summary>
            Solution is copied to the temp folder for each test, any operations allowed
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithExistingSolutionLoadedByMsbuild.PrepareSolutionFlags.RESTORE_NUGETS">
            <summary>
            Whether to restore nugets
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithSingleProject.WithSingleProject(System.String,System.Action{JetBrains.Lifetimes.Lifetime,JetBrains.ProjectModel.ISolution,JetBrains.ProjectModel.IProject})">
            <summary>
            In a solution with the single project, commits the documents and runs your code.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithSingleProject.WithSingleProject(System.Collections.Generic.IEnumerable{System.String},System.Action{JetBrains.Lifetimes.Lifetime,JetBrains.ProjectModel.ISolution,JetBrains.ProjectModel.IProject})">
            <summary>
            In a solution with the single project, commits the documents and runs your code.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithSingleProject.PrepareSingleProject(JetBrains.Lifetimes.Lifetime,JetBrains.ProjectModel.ISolution)">
            <summary>
            Prepares test environment for running tests on a single project. The lifetime is of the test.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.TestFramework.BaseTestWithSingleProject.ProjectFilePath">
            <summary>
            Location of the project file if any
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.ANNOTATIONS_PACKAGE">
            <summary>
            Standard package with annotation attributes
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.ShouldDisembowelNuGets">
            TODO(biryukov): remove this after we are sure not tests break without it.
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.PrepareSolution(JetBrains.Lifetimes.Lifetime,System.Func{JetBrains.ReSharper.TestFramework.BaseTestWithSolution,JetBrains.ReSharper.TestFramework.BaseTestWithSolution.TestSolutionConfiguration})">
            <summary>
            Opens a test solution in the solution environment. Favors the <see cref="M:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.CanReuseSolution(JetBrains.ProjectModel.ISolution)"/> flag.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.GuardAffinityFlags">
            <summary>
            How the main test method should be executed.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.GuardAffinityFlags.GuardedAndSync">
            <summary>
            The test method is executed under guard. <see cref="P:JetBrains.Threading.JetDispatcher.IsAsyncBehaviorProhibited">Async behavior</see> prohibited.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.GuardAffinityFlags.UnguardedAndAsync">
            <summary>
            The test method is executed without an external guard. <see cref="P:JetBrains.Threading.JetDispatcher.IsAsyncBehaviorProhibited">Async behavior</see> is allowed for the test run.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.TestFramework.BaseTestWithSolution.GuardAffinity">
            <summary>
            How the main test method should be executed.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithTextControl`1.DoNamedTest(System.String[])">
            <summary>
            For test method 'TestFoo()' runs the 'TestFoo.cs' file.
            For test method 'Foo()' runs test with 'Foo.cs' file.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithTextControl`1.DoNamedTest2(System.String[])">
            <summary>
            For test method 'TestFoo()' runs the 'Foo.cs' file.
            For test method 'Foo()' (without 'Test' prefix) throws exception.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithTextControl`1.OpenTextControl(JetBrains.Lifetimes.Lifetime,JetBrains.ProjectModel.IProjectFile)">
            <summary>
            Opens the text control for the given project file.
            Does NOT apply the default caret position processor markup.
            </summary>
            <param name="lifetime"></param>
            <param name="projectFile"></param>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithTextControl`1.OpenTextControl(JetBrains.Lifetimes.Lifetime,JetBrains.ReSharper.TestFramework.CaretPosition)">
            <summary>
            Opens the text control for the file pointed to by <paramref name="caretPosition" />.
            Applies caret from <paramref name="caretPosition" />. Ignores caret/selection from the caret position processor.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithTextControl`1.OpenTextControl(JetBrains.Lifetimes.Lifetime)">
            <summary>
            Opens the text control for the default file of this test.
            Applies caret/selection positions from the caret processor.
            Closes when the lifetime ends.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.BaseTestWithTextControl`1.OpenTextControl_CaretProcessorPositions">
            <summary>
            To open the default text control, (a) learns from the caret processor which file has the caret/sel and should be opened; (b) gets where to set sel/caret from all the possible sources.
            </summary>
            <returns></returns>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.CaretMovement">
            <summary>
            Helper class for testing navigation actions. Mimics movements of the caret from a source to a destination point
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.CaretPositionsProcessor">
            <summary>
            Helper class for testing navigation actions. Extracts information about caret movements from test data file.
            The encoding of caret movement is as follows:
            {sourceN} - source point for Nth movement
            {targetN} - target point for Nth movement
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.TestFramework.Components.Feature.Services.Lookup.TestLookupWindowManager.IsExternalDocumentChangeAllowed">
            <summary>
              If this flag is set, any document change doesn't cancel code completion
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Components.Features.PackageChecker.ServiceLocatorBlockerInTest">
            Service locator should not be used anywhere in tests, it connects to the internet
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Components.Psi.JavaScript.TestTsLanguageLevel">
            <summary>
            Note: please DON'T use in combination with settings enumeration: won't work
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Components.Psi.TestSolutionCachesOnPsi">
            <summary>
            Overrides <see cref="T:JetBrains.TestFramework.Projects.TestSolutionCaches"/> basing on <see cref="T:JetBrains.ReSharper.TestFramework.Components.Psi.TestPsiConfigurationSettings"/>
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.CustomTestFileTypeExtensionMapping">
            <summary>
            A component for custom extension to project file type mapping in tests
            See <see cref="T:JetBrains.ReSharper.TestFramework.CustomExtensionMappingAttribute"/>
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.CustomTestFileTypeExtensionMapping.#ctor(JetBrains.Lifetimes.Lifetime,JetBrains.ProjectModel.IProjectFileTypes,JetBrains.Application.changes.ChangeManager)">
            <summary>
            A component for custom extension to project file type mapping in tests
            See <see cref="T:JetBrains.ReSharper.TestFramework.CustomExtensionMappingAttribute"/>
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.CustomTestFileTypeExtensionMapping.CreateCustomMappingForProject(JetBrains.ProjectModel.ProjectFileType,System.Collections.Generic.IList{System.String},JetBrains.ReSharper.TestFramework.MappingBehaviour,JetBrains.ProjectModel.IProject)">
            <summary>
            Creates custom mapping and fires a psi module change for affected files
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.CustomTestFileTypeExtensionMapping.ClearCustomMappings">
            <summary>
            Clears all the mappings.
            The implementation is very simple since this component is expected to be used for tests where the mappings are no
            longer needed after the test completes
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.MappingBehaviour">
            <summary>
            Flags for mapping direction and overriding behaviour of mapping.
            You must use at least one mapping direction
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.ExtensionToFileType">
            <summary>
            Mapping direction. Allows to get customized project file types by extension
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.FileTypeToExtension">
            <summary>
            Mapping direction. Allows to get customized extensions by project file type
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.TwoWay">
            <summary>
            Mapping direction.
            Allows to get both customized project file types by extension and custom extensions by project file type
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.OverrideFileTypes">
            <summary>
            Overriding behaviour. Allows to completely hide default project file types by custom ones instead of merging with them
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.OverrideExtensions">
            <summary>
            Overriding behaviour. Allows to completely hide default extensions by custom ones instead of merging with them
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.OverrideTwoWay">
            <summary>
            Overriding behaviour. Allows to completely hide default extensions and project file types
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.TwoWayHideDefaultFileTypes">
            <summary>
            Map extensions and project file types both ways,
            hide default project file types by custom ones,
            merge default extensions with custom ones
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TestFramework.MappingBehaviour.TwoWayWithOverride">
            <summary>
            Map extensions and project file types both ways and hide defaults
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.JetPopupMenuItemsMarkdownDumper.DumpToMarkdown(System.Collections.Generic.ICollection{JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuItem},System.IO.TextWriter)">
            <summary>
            Dump to markdown format.
            </summary>
            <param name="items"></param>
            <param name="writer"></param>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNet50Attribute">
            <summary>
            .NET 5.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNet50Attribute.#ctor(System.String[])">
            <summary>
            .NET 5.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNet60Attribute">
            <summary>
            .NET 6.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNet60Attribute.#ctor(System.String[])">
            <summary>
            .NET 6.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNet70Attribute">
            <summary>
            .NET 7.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNet70Attribute.#ctor(System.String[])">
            <summary>
            .NET 7.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNet80Attribute">
            <summary>
            .NET 8.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNet80Attribute.#ctor(System.String[])">
            <summary>
            .NET 8.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNet90Attribute">
            <summary>
            .NET 9.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNet90Attribute.#ctor(System.String[])">
            <summary>
            .NET 9.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNetCore10Attribute">
            <summary>
            .NET Core 1.0 .NET Core targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNetCore10Attribute.#ctor(System.String[])">
            <summary>
            .NET Core 1.0 .NET Core targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNetCore20Attribute">
            <summary>
            .NET Core 2.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNetCore20Attribute.#ctor(System.String[])">
            <summary>
            .NET Core 2.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNetCore21Attribute">
            <summary>
            .NET Core 2.1.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNetCore21Attribute.#ctor(System.String[])">
            <summary>
            .NET Core 2.1.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNetCore30Attribute">
            <summary>
            .NET Core 3.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNetCore30Attribute.#ctor(System.String[])">
            <summary>
            .NET Core 3.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.TestNetCore31Attribute">
            <summary>
            .NET Core 3.1.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.TestNetCore31Attribute.#ctor(System.String[])">
            <summary>
            .NET Core 3.1.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.LineModifierWriter">
            A text writer, which splits input to lines and provides an interface to modify them in a streaming-way.
            Optionally converts from CRLF and LF to desired line endings.
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.LineModifierEx.WithRemoveTrailingSpace(JetBrains.ReSharper.TestFramework.LineModifierWriter)">
            an extension to remove trailing space in LineModifierWriter
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.LineModifierEx.WithReplaceByRegex(JetBrains.ReSharper.TestFramework.LineModifierWriter,System.Text.RegularExpressions.Regex,System.String)">
            an extension to replace specific parts by regex in LineModifierWriter
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.LineModifierEx.WithReplaceSubstring(JetBrains.ReSharper.TestFramework.LineModifierWriter,System.String,System.String)">
            an extension to replace substrings in LineModifierWriter
        </member>
        <member name="P:JetBrains.ReSharper.TestFramework.NamedPositionsProcessor.SkipExtensions">
            <summary>
            List of file extensions to skip text processing. Usefull for binary files.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.ReferenceTestBase.DoNamedTest(System.String[])">
            <summary>
            For test method 'TestBar()' runs the 'TestFoo.cs' file.
            For test method 'Foo()' runs test with 'Foo.cs' file.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.ReferenceTestBase.DoNamedTestWithProjectFile(System.String[])">
            <summary>
            For test method 'TestBar()' runs the 'TestFoo.cs' file with TestFoo.csproj.
            For test method 'Foo()' runs test with 'Foo.cs' file with TestFoo.csproj.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.ReferenceTestBase.DoNamedTest2(System.String[])">
            <summary>
            For test method 'TestBar()' runs the 'Foo.cs' file.
            For test method 'Foo()' (without 'Test' prefix) throws exception.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.ReferenceTestBase.SetUpInternal(JetBrains.Lifetimes.Lifetime)">
            <inheritdoc />
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore10Attribute">
            <summary>
            ASP.NET Core 1.0 .NET Core targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore10Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 1.0 .NET Core targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore20Attribute">
            <summary>
            ASP.NET Core 2.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore20Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 2.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore30Attribute">
            <summary>
            ASP.NET Core 3.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore30Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 3.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore31Attribute">
            <summary>
            ASP.NET Core 3.1.3 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore31Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 3.1.3 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore50Attribute">
            <summary>
            ASP.NET Core 5.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore50Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 5.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore60Attribute">
            <summary>
            ASP.NET Core 6.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore60Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 6.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore70Attribute">
            <summary>
            ASP.NET Core 7.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore70Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 7.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore80Attribute">
            <summary>
            ASP.NET Core 8.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestAspNetCore80Attribute.#ctor(System.String[])">
            <summary>
            ASP.NET Core 8.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestMvc601Attribute">
            <summary>
            ASP.NET Core 1.0.1
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestMvc610Attribute">
            <summary>
            ASP.NET Core 1.1.0
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestMvc6Attribute">
            <summary>
            ASP.NET Core 1.0 .NET Framework targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestMvcAttribute.GetReferences(JetBrains.TestFramework.BaseTestNoShell,JetBrains.TestFramework.JetNuGet.JetNuGetPackageManager,JetBrains.Util.Dotnet.TargetFrameworkIds.TargetFrameworkId)">
            <remarks>Due to bug RSRP-378399 we need to provide System reference first</remarks>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.Web.TestRazorComponentAttribute">
            <summary>
            Razor Component, ASP.NET Core 3.0.0 targeted
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TestFramework.Web.TestRazorComponentAttribute.#ctor(System.String[])">
            <summary>
            Razor Component, ASP.NET Core 3.0.0 targeted
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.WinRT.TestWin10ApplicationAttribute">
            <summary>
            Should be used with <see cref="T:JetBrains.ReSharper.TestFramework.WinRT.TestNetCoreAttribute"/>
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.WinUI.TestWinUINetCore50Attribute">
            <summary>
            Attribute to test WinUI apps (see RSRP-479890)
            - .NET Core 5.0
            - UAP 10
            - referencing Microsoft.WinUI
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.TestFramework.WinUI.TestWinUINetCoreApp50Attribute">
            <summary>
            Attribute to test WinUI apps (see RSRP-479890)
            - .NET Core App 5.0
            - UAP 10
            - referencing Microsoft.WinUI
            </summary>
        </member>
    </members>
</doc>
